name: x32

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  run_tests_on_x32:
    strategy:
      matrix:
        build_type: [ Release, Debug ]

    defaults:
      run:
        shell: pwsh

    env:
      BUILD_DIRECTORY: ${{github.workspace}}/build

    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Ninja (Ubuntu)
        run: sudo apt-get update && sudo apt-get install ninja-build

      - name: Create build directory
        run: cmake -E make_directory ${{env.BUILD_DIRECTORY}}

      - name: Select gcc toolset
        run: |
          echo "CC=gcc" >> $Env:GITHUB_ENV
          echo "CXX=g++" >> $Env:GITHUB_ENV

      - name: Configure
        working-directory: ${{env.BUILD_DIRECTORY}}
        run: >
          cmake ${{github.workspace}} 
          -G "Ninja Multi-Config" 
          -DCMAKE_BUILD_TYPE=${{matrix.build_type}}
          -DKAN_USE_VULKAN_API=OFF
          -DKAN_CORE_TYPES_PRESET=x32
          -DCMAKE_C_FLAGS=-m32
          -DCMAKE_CXX_FLAGS=-m32

      - name: Build
        working-directory: ${{env.BUILD_DIRECTORY}}
        run: cmake --build . --target test_kan --config ${{matrix.build_type}} -j 4

      - name: Test
        working-directory: ${{env.BUILD_DIRECTORY}}
        run: ctest --build-config ${{matrix.build_type}} --timeout 2

      - name: Upload test results
        if: ${{ success() }} || ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: test_results_x32
          path: ${{env.BUILD_DIRECTORY}}/Testing/Temporary
