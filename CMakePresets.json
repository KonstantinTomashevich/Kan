{
  "version": 6,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 25,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "base",
      "description": "Base configuration that is inherited everywhere.",
      "hidden": true,
      "binaryDir": "${sourceDir}/build/${presetName}"
    },
    {
      "name": "debug",
      "description": "Mixin with configuration with debug features enabled for development.",
      "inherits": [
        "base"
      ],
      "hidden": true,
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Debug",
        "KAN_APPLICATION_FRAMEWORK_PRINT_FRAME_TIMES": "OFF",
        "KAN_APPLICATION_GENERATE_CODE_HOT_RELOAD_TEST": "ON",
        "KAN_CONTEXT_HOT_RELOAD_COORDINATION_ENABLE_BY_DEFAULT": "ON",
        "KAN_CONTEXT_RENDER_BACKEND_VULKAN_DEBUG_ENABLED": "ON",
        "KAN_CONTEXT_RENDER_BACKEND_VULKAN_PRINT_FRAME_TIMES": "OFF",
        "KAN_CONTEXT_RENDER_BACKEND_VULKAN_PROFILE_MEMORY": "ON",
        "KAN_CPU_PROFILER_ENABLE_BY_DEFAULT": "OFF",
        "KAN_ASSERT_ENABLED": "ON",
        "KAN_IMAGE_STB_PROFILE_MEMORY": "ON",
        "KAN_MEMORY_PROFILER_ENABLE_BY_DEFAULT": "ON",
        "KAN_REFLECTION_VALIDATION_ENABLED": "ON",
        "KAN_UNIVERSE_RENDER_FOUNDATION_VALIDATION_ENABLED": "ON",
        "KAN_REPOSITORY_SAFEGUARDS_ENABLED": "ON",
        "KAN_REPOSITORY_VALIDATION_ENABLED": "ON",
        "KAN_WORKFLOW_VERIFY": "ON"
      }
    },
    {
      "name": "release",
      "description": "Mixin with configuration with everything unnecessary for release disabled.",
      "inherits": [
        "base"
      ],
      "hidden": true,
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "KAN_APPLICATION_FRAMEWORK_PRINT_FRAME_TIMES": "OFF",
        "KAN_APPLICATION_GENERATE_CODE_HOT_RELOAD_TEST": "OFF",
        "KAN_CONTEXT_HOT_RELOAD_COORDINATION_ENABLE_BY_DEFAULT": "OFF",
        "KAN_CONTEXT_RENDER_BACKEND_VULKAN_DEBUG_ENABLED": "OFF",
        "KAN_CONTEXT_RENDER_BACKEND_VULKAN_PRINT_FRAME_TIMES": "OFF",
        "KAN_CONTEXT_RENDER_BACKEND_VULKAN_PROFILE_MEMORY": "OFF",
        "KAN_CPU_PROFILER_ENABLE_BY_DEFAULT": "OFF",
        "KAN_ASSERT_ENABLED": "OFF",
        "KAN_IMAGE_STB_PROFILE_MEMORY": "OFF",
        "KAN_MEMORY_PROFILER_ENABLE_BY_DEFAULT": "OFF",
        "KAN_REFLECTION_VALIDATION_ENABLED": "OFF",
        "KAN_UNIVERSE_RENDER_FOUNDATION_VALIDATION_ENABLED": "OFF",
        "KAN_REPOSITORY_SAFEGUARDS_ENABLED": "OFF",
        "KAN_REPOSITORY_VALIDATION_ENABLED": "OFF",
        "KAN_WORKFLOW_VERIFY": "OFF"
      }
    },
    {
      "name": "performance_statistics",
      "description": "Mixin that inherits \"release\" mixin and enables performance statistics tools.",
      "inherits": [
        "release"
      ],
      "hidden": true,
      "cacheVariables": {
        "KAN_APPLICATION_FRAMEWORK_PRINT_FRAME_TIMES": "ON",
        "KAN_CONTEXT_RENDER_BACKEND_VULKAN_PRINT_FRAME_TIMES": "ON"
      }
    },
    {
      "name": "ninja",
      "description": "Mixin with common configuration for builds using ninja multi config.",
      "hidden": true,
      "generator": "Ninja Multi-Config"
    },
    {
      "name": "visual_studio",
      "description": "Mixin with common configuration for builds using visual studio.",
      "hidden": true,
      "generator": "Visual Studio 17 2022",
      "cacheVariables": {
        "KAN_APPLICATION_ENABLE_AUTO_BUILD": "OFF"
      }
    },
    {
      "name": "ninja_gcc",
      "description": "Mixin with common configuration for selecting gcc under ninja.",
      "inherits": [
        "ninja"
      ],
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C_COMPILER": "gcc",
        "CMAKE_CXX_COMPILER": "g++",
        "KAN_APPLICATION_AUTO_BUILD_DELAY_NS": "500000000"
      }
    },
    {
      "name": "ninja_clang",
      "description": "Mixin with common configuration for selecting clang under ninja.",
      "inherits": [
        "ninja"
      ],
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C_COMPILER": "clang",
        "CMAKE_CXX_COMPILER": "clang",
        "KAN_APPLICATION_AUTO_BUILD_DELAY_NS": "500000000"
      }
    },
    {
      "name": "ninja_msvc",
      "description": "Mixin with common configuration for selecting msvc under ninja. Requires cl in path!",
      "inherits": [
        "ninja"
      ],
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C_COMPILER": "cl",
        "CMAKE_CXX_COMPILER": "cl",
        "KAN_APPLICATION_AUTO_BUILD_DELAY_NS": "1000000000"
      }
    },
    {
      "name": "ninja_clang_cl",
      "description": "Mixin with common configuration for selecting clang-cl under ninja. Requires clang-cl in path!",
      "inherits": [
        "ninja"
      ],
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C_COMPILER": "clang-cl",
        "CMAKE_CXX_COMPILER": "clang-cl",
        "KAN_APPLICATION_AUTO_BUILD_DELAY_NS": "1000000000"
      }
    },
    {
      "name": "visual_studio_msvc",
      "description": "Mixin with common configuration for selecting msvc under visual studio generator.",
      "inherits": [
        "visual_studio"
      ],
      "hidden": true,
      "architecture": {
        "value": "x64",
        "strategy": "set"
      },
      "toolset": {
        "value": "v143",
        "strategy": "set"
      }
    },
    {
      "name": "visual_studio_clang",
      "description": "Mixin with common configuration for selecting clang-cl under visual studio generator.",
      "inherits": [
        "visual_studio"
      ],
      "hidden": true,
      "architecture": {
        "value": "x64",
        "strategy": "set"
      },
      "toolset": {
        "value": "clangcl",
        "strategy": "set"
      }
    },
    {
      "name": "gcc_x32",
      "description": "Mixin that enforces x32 compilation on linux using gcc.",
      "hidden": true,
      "cacheVariables": {
        "KAN_CORE_TYPES_PRESET": "x32",
        "CMAKE_C_FLAGS": "-m32",
        "CMAKE_CXX_FLAGS": "-m32"
      }
    },
    {
      "name": "debug_linux_gcc",
      "inherits": [
        "debug",
        "ninja_gcc"
      ],
      "description": "Full configuration for debug build on linux using gcc.",
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Linux"
      }
    },
    {
      "name": "debug_linux_gcc_x32",
      "description": "Full configuration for debug build on linux using gcc in x32 mode.",
      "inherits": [
        "debug",
        "ninja_gcc",
        "gcc_x32"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Linux"
      }
    },
    {
      "name": "debug_linux_clang",
      "description": "Full configuration for debug build on linux using clang.",
      "inherits": [
        "debug",
        "ninja_clang"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Linux"
      }
    },
    {
      "name": "sanitize_linux_clang",
      "description": "Full configuration for debug build on linux using clang with address sanitizer.",
      "inherits": [
        "debug",
        "ninja_clang"
      ],
      "cacheVariables": {
        "KAN_ENABLE_ADDRESS_SANITIZER": "ON"
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Linux"
      }
    },
    {
      "name": "debug_windows_ninja_msvc",
      "description": "Full configuration for debug build on windows using msvc with ninja.",
      "inherits": [
        "debug",
        "ninja_msvc"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    },
    {
      "name": "debug_windows_ninja_clang",
      "description": "Full configuration for debug build on windows using clang-cl with ninja.",
      "inherits": [
        "debug",
        "ninja_clang_cl"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    },
    {
      "name": "debug_windows_visual_studio_msvc",
      "description": "Full configuration for debug build on windows using msvc with visual studio.",
      "inherits": [
        "debug",
        "visual_studio_msvc"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    },
    {
      "name": "debug_windows_visual_studio_clang",
      "description": "Full configuration for debug build on windows using clang-cl with visual studio.",
      "inherits": [
        "debug",
        "visual_studio_clang"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    },
    {
      "name": "release_linux_gcc",
      "description": "Full configuration for release build on linux using gcc.",
      "inherits": [
        "release",
        "ninja_gcc"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Linux"
      }
    },
    {
      "name": "release_linux_gcc_x32",
      "description": "Full configuration for release build on linux using gcc in x32 mode.",
      "inherits": [
        "release",
        "ninja_gcc",
        "gcc_x32"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Linux"
      }
    },
    {
      "name": "release_linux_clang",
      "description": "Full configuration for release build on linux using clang.",
      "inherits": [
        "release",
        "ninja_clang"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Linux"
      }
    },
    {
      "name": "performance_statistics_linux_clang",
      "description": "Full configuration for measuring performance statistics on linux using clang.",
      "inherits": [
        "performance_statistics",
        "ninja_clang"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Linux"
      }
    },
    {
      "name": "release_windows_visual_studio_msvc",
      "description": "Full configuration for release build on windows using msvc with visual studio.",
      "inherits": [
        "release",
        "visual_studio_msvc"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    },
    {
      "name": "release_windows_visual_studio_clang",
      "description": "Full configuration for release build on windows using clang-cl with visual studio.",
      "inherits": [
        "release",
        "visual_studio_clang"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    },
    {
      "name": "release_windows_ninja_msvc",
      "description": "Full configuration for release build on windows using msvc with ninja.",
      "inherits": [
        "release",
        "ninja_msvc"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    },
    {
      "name": "release_windows_ninja_clang",
      "description": "Full configuration for release build on windows using clang-cl with ninja.",
      "inherits": [
        "release",
        "ninja_clang_cl"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    },
    {
      "name": "performance_statistics_windows_ninja_clang",
      "description": "Full configuration for measuring performance statistics on windows using clang-cl with ninja.",
      "inherits": [
        "performance_statistics",
        "ninja_clang_cl"
      ],
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    }
  ]
}
