// Improvised simple pipeline to check that for loop can be properly processed.

vertex_attribute_buffer vertex
{
    f3 position;
    f2 uv;
};

set_object uniform_buffer uniforms
{
    f4x4 model_view_projection;
};

vertex_stage_output vertex_output
{
    f2 uv;
};

void vertex_main (void)
{
    vertex_output.uv = vertex.uv;
    f4 position4 = f4 {vertex.position.xyz, 1.0};
    vertex_stage_output_position (uniforms.model_view_projection * position4);
}

set_material sampler color_sampler;
set_material image_color_2d diffuse_color;

fragment_stage_output fragment_output
{
    f4 color;
};

void fragment_main (void)
{
    f4 base_color = sample (color_sampler, diffuse_color, vertex_output.uv);
    f4 modifier = f4 {0.0, 0.0, 0.0, 1.0};

    for (u1 i = 0u; i < 5u || i < 7u || i < 10u; i = i + 1u)
    {
        modifier = modifier + f4 {0.1, 0.1, 0.1, 0.0};
        if (i == 3u)
        {
            modifier.x = 1.0;
            break;
        }
    }

    fragment_output.color = base_color * modifier;
}
