// Improvised simple pipeline to check that while loop can be properly processed.

vertex_attribute_container vertex
{
    f3 position;
    pack (float16) f2 uv;
};

set_pass uniform_buffer pass
{
    f4x4 model_view_projection;
};

state_container state
{
    f2 uv;
};

void vertex_main (void)
{
    state.uv = vertex.uv;
    f4 position4 = f4 {vertex.position.xyz, 1.0};
    vertex_stage_output_position (pass.model_view_projection * position4);
}

set_material sampler color_sampler;
set_material image_color_2d diffuse_color;

color_output_container fragment_output
{
    f4 color;
};

void fragment_main (void)
{
    f4 base_color = sample (color_sampler, diffuse_color, state.uv);
    f4 modifier = f4 {0.0, 0.0, 0.0, 1.0};

    while (modifier.x < 0.49 && modifier.y < 0.49 && modifier.z < 0.49)
    {
        modifier = modifier + f4 {0.1, 0.1, 0.1, 0.0};
    }

    fragment_output.color = base_color * modifier;
}
