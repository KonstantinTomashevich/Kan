register_concrete (reflection_kan)
concrete_include (PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}")
concrete_sources ("*.c")
concrete_require (SCOPE PRIVATE ABSTRACT error hash log memory THIRD_PARTY qsort)
concrete_implements_abstract (reflection)

set (KAN_REFLECTION_ENUM_INITIAL_BUCKETS "64" CACHE STRING "Initial count of buckets for enum hash storage.")
set (KAN_REFLECTION_ENUM_LOAD_FACTOR "4" CACHE STRING "Target count of enum info per bucket.")

set (KAN_REFLECTION_STRUCT_INITIAL_BUCKETS "64" CACHE STRING "Initial count of buckets for struct hash storage.")
set (KAN_REFLECTION_STRUCT_LOAD_FACTOR "4" CACHE STRING "Target count of struct info per bucket.")

set (KAN_REFLECTION_ENUM_META_INITIAL_BUCKETS "64" CACHE STRING "Initial count of buckets for enum meta hash storage.")
set (KAN_REFLECTION_ENUM_META_LOAD_FACTOR "4" CACHE STRING "Target count of enum meta per bucket.")

set (KAN_REFLECTION_ENUM_VALUE_META_INITIAL_BUCKETS "64" CACHE STRING
        "Initial count of buckets for enum value meta hash storage.")
set (KAN_REFLECTION_ENUM_VALUE_META_LOAD_FACTOR "4" CACHE STRING "Target count of enum value meta per bucket.")

set (KAN_REFLECTION_STRUCT_META_INITIAL_BUCKETS "64" CACHE STRING
        "Initial count of buckets for struct meta hash storage.")
set (KAN_REFLECTION_STRUCT_META_LOAD_FACTOR "4" CACHE STRING "Target count of struct meta per bucket.")

set (KAN_REFLECTION_STRUCT_FIELD_META_INITIAL_BUCKETS "64" CACHE STRING
        "Initial count of buckets for struct field meta hash storage.")
set (KAN_REFLECTION_STRUCT_FIELD_META_LOAD_FACTOR "4" CACHE STRING "Target count of struct field meta per bucket.")

set (KAN_REFLECTION_PATCH_BUILDER_STACK_SIZE "1048576" CACHE STRING "Size of patch builder algorithm stack.")

concrete_compile_definitions (
        PRIVATE
        KAN_REFLECTION_ENUM_INITIAL_BUCKETS=${KAN_REFLECTION_ENUM_INITIAL_BUCKETS}
        KAN_REFLECTION_ENUM_LOAD_FACTOR=${KAN_REFLECTION_ENUM_LOAD_FACTOR}
        KAN_REFLECTION_STRUCT_INITIAL_BUCKETS=${KAN_REFLECTION_STRUCT_INITIAL_BUCKETS}
        KAN_REFLECTION_STRUCT_LOAD_FACTOR=${KAN_REFLECTION_STRUCT_LOAD_FACTOR}
        KAN_REFLECTION_ENUM_META_INITIAL_BUCKETS=${KAN_REFLECTION_ENUM_META_INITIAL_BUCKETS}
        KAN_REFLECTION_ENUM_META_LOAD_FACTOR=${KAN_REFLECTION_ENUM_META_LOAD_FACTOR}
        KAN_REFLECTION_ENUM_VALUE_META_INITIAL_BUCKETS=${KAN_REFLECTION_ENUM_VALUE_META_INITIAL_BUCKETS}
        KAN_REFLECTION_ENUM_VALUE_META_LOAD_FACTOR=${KAN_REFLECTION_ENUM_VALUE_META_LOAD_FACTOR}
        KAN_REFLECTION_STRUCT_META_INITIAL_BUCKETS=${KAN_REFLECTION_STRUCT_META_INITIAL_BUCKETS}
        KAN_REFLECTION_STRUCT_META_LOAD_FACTOR=${KAN_REFLECTION_STRUCT_META_LOAD_FACTOR}
        KAN_REFLECTION_STRUCT_FIELD_META_INITIAL_BUCKETS=${KAN_REFLECTION_STRUCT_FIELD_META_INITIAL_BUCKETS}
        KAN_REFLECTION_STRUCT_FIELD_META_LOAD_FACTOR=${KAN_REFLECTION_STRUCT_FIELD_META_LOAD_FACTOR}
        KAN_REFLECTION_PATCH_BUILDER_STACK_SIZE=${KAN_REFLECTION_PATCH_BUILDER_STACK_SIZE})

option (KAN_REFLECTION_VALIDATION_ENABLED "Whether reflection data validation is enabled." ON)
if (KAN_REFLECTION_VALIDATION_ENABLED)
    concrete_compile_definitions (PRIVATE KAN_REFLECTION_WITH_VALIDATION)
endif ()
