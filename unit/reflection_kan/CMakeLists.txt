register_concrete (reflection_kan)
concrete_include (PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}")
concrete_sources ("*.c")
concrete_require (SCOPE PRIVATE ABSTRACT cpu_dispatch error hash log memory THIRD_PARTY qsort)
concrete_implements_abstract (reflection)

set (KAN_REFLECTION_ENUM_INITIAL_BUCKETS "64" CACHE STRING "Initial count of buckets for enum hash storage.")
set (KAN_REFLECTION_STRUCT_INITIAL_BUCKETS "64" CACHE STRING "Initial count of buckets for struct hash storage.")
set (KAN_REFLECTION_FUNCTION_INITIAL_BUCKETS "64" CACHE STRING "Initial count of buckets for function hash storage.")
set (KAN_REFLECTION_ENUM_META_INITIAL_BUCKETS "64" CACHE STRING "Initial count of buckets for enum meta hash storage.")

set (KAN_REFLECTION_ENUM_VALUE_META_INITIAL_BUCKETS "64" CACHE STRING
        "Initial count of buckets for enum value meta hash storage.")
set (KAN_REFLECTION_STRUCT_META_INITIAL_BUCKETS "64" CACHE STRING
        "Initial count of buckets for struct meta hash storage.")
set (KAN_REFLECTION_STRUCT_FIELD_META_INITIAL_BUCKETS "64" CACHE STRING
        "Initial count of buckets for struct field meta hash storage.")
set (KAN_REFLECTION_FUNCTION_META_INITIAL_BUCKETS "64" CACHE STRING
        "Initial count of buckets for function meta hash storage.")
set (KAN_REFLECTION_FUNCTION_ARGUMENT_META_INITIAL_BUCKETS "64" CACHE STRING
        "Initial count of buckets for function argument meta hash storage.")
set (KAN_REFLECTION_PATCH_BUILDER_STACK_SIZE "1048576" CACHE STRING "Size of patch builder algorithm stack.")

set (KAN_REFLECTION_MIGRATION_ENUM_SEED_INITIAL_BUCKETS "64" CACHE STRING
        "Initial count of buckets for migration enum seed hash storage.")
set (KAN_REFLECTION_MIGRATION_STRUCT_SEED_INITIAL_BUCKETS "64" CACHE STRING
        "Initial count of buckets for migration struct seed hash storage.")
set (KAN_REFLECTION_MIGRATOR_BUILD_STACK "16777216" CACHE STRING
        "Maximum memory stack size for migrator building algorithm.")
set (KAN_REFLECTION_MIGRATOR_MAX_CONDITIONS "32" CACHE STRING
        "Maximum count of conditions in migrator code in order to allocate their evaluation array on stack.")
set (KAN_REFLECTION_MIGRATOR_PATCH_MAX_NODES "32" CACHE STRING
        "Maximum count of nodes in migrated patch in order to allocate their array on stack.")
set (KAN_REFLECTION_MIGRATOR_PATCH_BUNDLE_SIZE "32" CACHE STRING
        "Size of a bundle of patches that is sent as one cpu task.")
set (KAN_REFLECTION_MIGRATOR_PATCH_TASK_STACK_INITIAL_SIZE "65536" CACHE STRING
        "Initial size for stack group allocator used for patch migration to allocate tasks.")

concrete_compile_definitions (
        PRIVATE
        KAN_REFLECTION_ENUM_INITIAL_BUCKETS=${KAN_REFLECTION_ENUM_INITIAL_BUCKETS}
        KAN_REFLECTION_STRUCT_INITIAL_BUCKETS=${KAN_REFLECTION_STRUCT_INITIAL_BUCKETS}
        KAN_REFLECTION_FUNCTION_INITIAL_BUCKETS=${KAN_REFLECTION_FUNCTION_INITIAL_BUCKETS}
        KAN_REFLECTION_ENUM_META_INITIAL_BUCKETS=${KAN_REFLECTION_ENUM_META_INITIAL_BUCKETS}
        KAN_REFLECTION_ENUM_VALUE_META_INITIAL_BUCKETS=${KAN_REFLECTION_ENUM_VALUE_META_INITIAL_BUCKETS}
        KAN_REFLECTION_STRUCT_META_INITIAL_BUCKETS=${KAN_REFLECTION_STRUCT_META_INITIAL_BUCKETS}
        KAN_REFLECTION_STRUCT_FIELD_META_INITIAL_BUCKETS=${KAN_REFLECTION_STRUCT_FIELD_META_INITIAL_BUCKETS}
        KAN_REFLECTION_FUNCTION_META_INITIAL_BUCKETS=${KAN_REFLECTION_FUNCTION_META_INITIAL_BUCKETS}
        KAN_REFLECTION_FUNCTION_ARGUMENT_META_INITIAL_BUCKETS=${KAN_REFLECTION_FUNCTION_ARGUMENT_META_INITIAL_BUCKETS}
        KAN_REFLECTION_PATCH_BUILDER_STACK_SIZE=${KAN_REFLECTION_PATCH_BUILDER_STACK_SIZE}
        KAN_REFLECTION_MIGRATION_ENUM_SEED_INITIAL_BUCKETS=${KAN_REFLECTION_MIGRATION_ENUM_SEED_INITIAL_BUCKETS}
        KAN_REFLECTION_MIGRATION_STRUCT_SEED_INITIAL_BUCKETS=${KAN_REFLECTION_MIGRATION_STRUCT_SEED_INITIAL_BUCKETS}
        KAN_REFLECTION_MIGRATOR_BUILD_STACK=${KAN_REFLECTION_MIGRATOR_BUILD_STACK}
        KAN_REFLECTION_MIGRATOR_MAX_CONDITIONS=${KAN_REFLECTION_MIGRATOR_MAX_CONDITIONS}
        KAN_REFLECTION_MIGRATOR_PATCH_MAX_NODES=${KAN_REFLECTION_MIGRATOR_PATCH_MAX_NODES}
        KAN_REFLECTION_MIGRATOR_PATCH_BUNDLE_SIZE=${KAN_REFLECTION_MIGRATOR_PATCH_BUNDLE_SIZE}
        KAN_REFLECTION_MIGRATOR_PATCH_TASK_STACK_INITIAL_SIZE=${KAN_REFLECTION_MIGRATOR_PATCH_TASK_STACK_INITIAL_SIZE})

option (KAN_REFLECTION_VALIDATION_ENABLED "Whether reflection data validation is enabled." ON)
if (KAN_REFLECTION_VALIDATION_ENABLED)
    concrete_compile_definitions (PRIVATE KAN_REFLECTION_WITH_VALIDATION)
endif ()

c_interface_scanner_setup (GLOB "*.c" "*.h")
